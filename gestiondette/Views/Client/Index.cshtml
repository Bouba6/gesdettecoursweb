@model IEnumerable<gestiondette.Models.Client>

@{
    Layout = "_layout";
}

<main class="p-4 sm:ml-64  overflow-hidden">
    <button
        class="flex items-center px-5 py-3    bg-blue-600 text-white font-semibold rounded-lg shadow-md hover:bg-blue-500 transition duration-200 mb-3">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        <a asp-action="Create">Create New</a>
    </Button>
    <div class="relative overflow-x-auto shadow-md sm:rounded-lg ">
        <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
            <thead class="text-xs text-gray-700 uppercase  dark:bg-gray-700 dark:text-gray-400  bg-gray-900">
                <tr>
                    <th scope="col" class="px-6 py-5 text-white">
                        @Html.DisplayNameFor(model => model.Surnom)
                    </th>
                    <th scope="col" class="px-6 py-5 text-white">
                        @Html.DisplayNameFor(model => model.Telephone)
                    </th>
                    <th scope="col" class="px-6 py-5 text-white">
                        @Html.DisplayNameFor(model => model.Adresse)
                    </th>
                    <th scope="col" class="px-6 py-5 text-white">
                        @Html.DisplayNameFor(model => model.Solde)
                    </th>
                    <th scope="col" class="px-6 py-5 text-white">
                        @Html.DisplayNameFor(model => model.CreateAt)
                    </th>
                    <th scope="col" class="px-6 py-5 text-white">
                        @Html.DisplayNameFor(model => model.UpdateAt)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr
                        class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @Html.DisplayFor(modelItem => item.Surnom)
                        </td>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @Html.DisplayFor(modelItem => item.Telephone)
                        </td>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @Html.DisplayFor(modelItem => item.Adresse)
                        </td>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @Html.DisplayFor(modelItem => item.Solde)
                        </td>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @Html.DisplayFor(modelItem => item.CreateAt)
                        </td>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            @Html.DisplayFor(modelItem => item.UpdateAt)
                        </td>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="mt-4 flex justify-center items-center space-x-4">
        @if (ViewBag.CurrentPage > 1)
        {
            <a asp-action="Index" asp-route-pageNumber="@(ViewBag.CurrentPage - 1)" asp-route-pageSize="3"
                class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-500">
                Précédent
            </a>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <a asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@(ViewBag.PageSize)"
                class="px-3 py-2 @(i == ViewBag.CurrentPage ? "bg-blue-600 text-white" : "bg-gray-200 text-gray-700") rounded hover:bg-blue-500">
                @i
            </a>
        }


        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a asp-action="Index" asp-route-pageNumber="@(ViewBag.CurrentPage + 1)" asp-route-pageSize="3"
                class="px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-500">
                Suivant
            </a>
        }
    </div>
</main>
